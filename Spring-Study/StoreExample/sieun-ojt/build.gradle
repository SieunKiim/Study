plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'billing'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.4")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'



	// QueryDSL 라이브러리
	implementation 'com.querydsl:querydsl-core'
	// QueryDSL JPA 라이브러리
	implementation 'com.querydsl:querydsl-jpa'
	// QueryDSL 관련된 쿼리 타입(QClass)을 생성할 때 필요한 라이브러리로, annotationProcessor을 사용하여 추가
	annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
	// java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 시 추가
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	// java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 시 추가
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'


	// OpenFeign 설정
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// x-www-form 매핑
	implementation 'commons-beanutils:commons-beanutils:1.9.3'

}

tasks.named('test') {
	useJUnitPlatform()
}
